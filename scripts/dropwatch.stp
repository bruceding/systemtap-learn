#! /usr/bin/env stap

############################################################
# Dropwatch.stp
# Author: Neil Horman <nhorman@redhat.com>
# An example script to mimic the behavior of the dropwatch utility
# http://fedorahosted.org/dropwatch
############################################################

# Array to hold the list of drop points we find
global locations
global sources

# Note when we turn the monitor on and off
probe begin { printf("Monitoring for dropped packets\n") }
probe end { printf("Stopping dropped packet monitor\n") }

# increment a drop counter for every location we drop at
probe kernel.trace("kfree_skb") {
    if (pid() > 0 && __ip_skb_proto(__get_skb_iphdr($skb)) == 6) {
        locations[pid(),$location] <<< 1
        sock = $skb->sk
        if (sock != 0 && $skb->protocol ==8) {
            sources[execname(),pid(),inet_get_ip_source(sock)] <<< 1
        }
    }
}

# Every 5 seconds report our drop locations
probe timer.sec(5)
{
    printf("\n")
    foreach ([pid,l] in locations-) {
    printf("%d %d packets dropped at %s\n",
      pid,@count(locations[pid,l]), symname(l))
    }
    delete locations
    printf("%16s %6s %16s %6s\n",
      "CMD", "PID", "IP_SOURCE", "NUM")
    foreach ([cmd, pid, ip] in sources-) {
      printf("%16s %6d %16s %6d\n", cmd, pid, ip, @count(sources[cmd,pid,ip]))
    }
    delete sources
}
